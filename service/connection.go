package service

import (
	"container/list"
	"fmt"
	"time"
)

type iconn interface {
	Read()	[]byte
	Write(msg []byte)	error
}


type Connection struct {
	conn 		iconn

	def_codec	Codec		//默认解码器 --json

	is_auth		bool		//是否认证
	is_live 	bool		//是否存活

	//appid  int64
	uid    		string		//用户id
	device_id 	string		//设备id
	platform_id string		//平台id
	device_ID 	string 		//generated by device_id + _ + platform_id

	wt 			chan *Message
	messages 	*list.List //待发送的消息队列 FIFO
}

func (c *Connection)EnqueueMessage(msg *Message) bool {
	msg.To = c.uid
	if c.is_live {
		fmt.Println("can't send msg to deal connection:",c.uid)
		return false
	}
	select {
	case c.wt<-msg:
		return true
	case  <- time.After(60*time.Second):
		fmt.Println("send message to wt timed out:", c.uid)
		return false
	}
}

//平台
const (
	_PLATFORM		=	iota
	PLATFORM_IOS 			//ios
	PLATFORM_ANDROID		//android
	PLATFORM_WEB			//web
)